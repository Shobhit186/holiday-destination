generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Account {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  userId String @db.ObjectId
  type String
  provider String
  providerAccountId String
  refresh_token String? @db.String
  access_token String? @db.String
  expires_at Int?
  scope String?
  token_type String?
  id_token String?
  session_state String?
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  @@unique([provider, providerAccountId])
}

model Listing {
  id            String   @id @default(auto()) @map("_id") @db.ObjectId
  bathroomcount BigInt
  category      String
  createdAt     DateTime @db.Date
  description   String
  guestcount    BigInt
  imageSrc      String
  locationValue String
  price         BigInt
  roomcount     BigInt
  title         String
  userId        String   @db.ObjectId

    user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  reservation Reservation[]
}

model Reservation {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  createdAt DateTime @db.Date
  endDate   DateTime @db.Date
  listingId String   @db.ObjectId
  price     BigInt
  startDate DateTime @db.Date
  userId    String   @db.ObjectId

    user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  listing Listing @relation(fields: [listingId], references: [id], onDelete: Cascade)
}

model User {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  name String?
  email String? @unique
  emailVerified DateTime?
  hashedpassword String?
  image String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  favouriteIds String[]

    account Account[]
  listing Listing[]
  reservation Reservation[]
}
